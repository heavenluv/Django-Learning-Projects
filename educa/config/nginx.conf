# the upstream component nginx needs to connect to
upstream educa {
    server      unix:///Users/heavenluv/Desktop/Code/tryenv/educa/educa.sock;
}
upstream daphne {
    server      unix:///Users/heavenluv/Desktop/Code/tryenv/educa/daphne.sock;
}
server {
    listen          80;
    server_name     *.educaprojectabc.com educaprojectabc.com;
    #return an HTTP response code 301 (permanent redirect) that redirects to the https:// version of the requested URL.
    return 301 https://educaprojectabc.com$request_uri;
}
server {
    listen                  443 ssl;
    ssl_certificate         /Users/heavenluv/Desktop/Code/tryenv/educa/ssl/educa.crt;
    ssl_certificate_key     /Users/heavenluv/Desktop/Code/tryenv/educa/ssl/educa.key;
    #set servername to both link below, NGINX will serve incoming requests for both domains
    server_name             *.educaprojectabc.com educaprojectabc.com;

    access_log   off;
    error_log    /Users/heavenluv/Desktop/Code/tryenv/educa/logs/nginx_error.log;
    #error_log     /usr/local/var/log/nginx/error.log;

    location / {
        include     /usr/local/etc/nginx/uwsgi_params;
        #specify that everything under the / path has to be routed to the educa socket (uWSGI).
        uwsgi_pass  educa;
    } 
    
    location /ws/ {
        #use the proxy_pass directive to pass requests to Daphne and you include some additional proxy directives.
        proxy_http_version    1.1;
        proxy_set_header      Upgrade $http_upgrade;
        proxy_set_header      Connection "upgrade";
        proxy_redirect        off;
        proxy_pass            http://daphne;
    }

    location /static/ {
        alias   /Users/heavenluv/Desktop/Code/tryenv/educa/static/;
    }

    location /media/ {
        alias   /Users/heavenluv/Desktop/Code/tryenv/educa/media/;
    }
    
}

